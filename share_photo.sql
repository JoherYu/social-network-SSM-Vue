-- 创建数据库
CREATE DATABASE social_network;
USE social_network;

-- 创建角色实体表

CREATE TABLE role(
  id TINYINT UNSIGNED AUTO_INCREMENT NOT NULL,
  name VARCHAR(30) NOT NULL UNIQUE DEFAULT '',
  PRIMARY KEY (id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建权限实体表
CREATE TABLE permission(
  id TINYINT UNSIGNED AUTO_INCREMENT NOT NULL,
  name VARCHAR(30) NOT NULL UNIQUE DEFAULT '',
  PRIMARY KEY (id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建角色权限关系表
CREATE TABLE roles_permissions(
  role_id TINYINT UNSIGNED NOT NULL,
  permission_id TINYINT UNSIGNED NOT NULL,
  FOREIGN KEY (role_id) REFERENCES role (id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (permission_id) REFERENCES permission (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建用户实体表
CREATE TABLE user(
  id INTEGER UNSIGNED AUTO_INCREMENT NOT NULL,
  email VARCHAR(254) NOT NULL UNIQUE,
  username VARCHAR(20) NOT NULL UNIQUE,
  ori_username VARCHAR(20) NOT NULL,
  password_hash VARCHAR(128) NOT NULL,
  name VARCHAR(30) DEFAULT '' NOT NULL,
  website VARCHAR(255) DEFAULT '' NOT NULL,
  bio VARCHAR(120) DEFAULT '' NOT NULL,
  location VARCHAR(50) DEFAULT '' NOT NULL,
  member_since TIMESTAMP NOT NULL DEFAULT NOW(),
  avatar_s VARCHAR(64) DEFAULT '' NOT NULL, 
  avatar_m VARCHAR(64) DEFAULT '' NOT NULL, 
  avatar_l VARCHAR(64) DEFAULT '' NOT NULL, 
  avatar_raw VARCHAR(64) DEFAULT '' NOT NULL, 
  confirmed TINYINT UNSIGNED DEFAULT 0 NOT NULL,
  locked TINYINT UNSIGNED DEFAULT 0 NOT NULL,
  active TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  public_collections TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  receive_comment_notification TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  receive_follow_notification TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  receive_collect_notification TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  role_id TINYINT UNSIGNED DEFAULT 2 NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (role_id) REFERENCES role (id) ON UPDATE NO ACTION ON DELETE NO ACTION,
  CHECK (confirmed IN (0,1)),
  CHECK (locked IN (0,1)),
  CHECK (active IN (0,1)),
  CHECK (public_collections IN (0,1)),
  CHECK (receive_collect_notification IN (0,1)),
  CHECK (receive_comment_notification IN (0,1)),
  CHECK (receive_follow_notification IN (0,1))
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建关注关系表
CREATE TABLE follow(
  timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
  follower_id INTEGER UNSIGNED NOT NULL,
  followed_id INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(follower_id,followed_id),
  FOREIGN KEY (follower_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (followed_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建相片实体表
CREATE TABLE photo(
  id INTEGER UNSIGNED AUTO_INCREMENT NOT NULL,
  description VARCHAR(500) NOT NULL DEFAULT '',
  filename VARCHAR(64) DEFAULT '' NOT NULL, 
  filename_s VARCHAR(64) DEFAULT '' NOT NULL, 
  filename_m VARCHAR(64) DEFAULT '' NOT NULL,
  timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
  flag SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  can_comment TINYINT UNSIGNED DEFAULT 1 NOT NULL,
  author_id INT UNSIGNED NOT NULL,
  PRIMARY KEY (id),
  INDEX (timestamp),
  FOREIGN KEY (author_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
  CHECK (can_comment IN (0,1))
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建收藏关系表
CREATE TABLE collect(
  timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
  collector_id INTEGER UNSIGNED NOT NULL,
  collected_id INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(collector_id,collected_id),
  FOREIGN KEY (collector_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (collected_id) REFERENCES photo (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建标签实体表
CREATE TABLE tag(
  id INTEGER UNSIGNED AUTO_INCREMENT NOT NULL,
	name VARCHAR(64) NOT NULL DEFAULT '' UNIQUE,
  PRIMARY KEY(id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建标签相片关系表
CREATE TABLE tagging(
  photo_id INTEGER UNSIGNED NOT NULL,
  tag_id INTEGER UNSIGNED NOT NULL,
    PRIMARY KEY(photo_id, tag_id),
  FOREIGN KEY (photo_id) REFERENCES photo (id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (tag_id) REFERENCES tag (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建评论实体表
CREATE TABLE comment(
  id INTEGER UNSIGNED AUTO_INCREMENT NOT NULL,
	body TEXT NOT NULL,
	timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
  flag SMALLINT UNSIGNED NOT NULL DEFAULT 0,
	replied_id INTEGER UNSIGNED DEFAULT NULL,
	author_id INTEGER UNSIGNED NOT NULL,
	photo_id INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(id),
  INDEX (timestamp),	
	FOREIGN KEY (replied_id) REFERENCES comment (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (author_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (photo_id) REFERENCES photo (id) ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 创建消息实体表
CREATE TABLE notification(
  id INTEGER UNSIGNED AUTO_INCREMENT NOT NULL,
	message TEXT NOT NULL,
	timestamp TIMESTAMP NOT NULL DEFAULT NOW(),
  is_read TINYINT UNSIGNED DEFAULT 0 NOT NULL,
	receiver_id  INTEGER UNSIGNED NOT NULL,
  PRIMARY KEY(id),
  INDEX (timestamp),	
	FOREIGN KEY (receiver_id) REFERENCES user (id) ON UPDATE CASCADE ON DELETE CASCADE,
	CHECK (is_read IN (0,1))
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- 初始化角色与权限信息
INSERT INTO role (name) VALUES ('Locked'), ('User'), ('Moderator'), ('Administrator');
INSERT INTO permission (name) VALUES ('FOLLOW'), ('COLLECT'), ('COMMENT'), ('UPLOAD'), ('MODERATE'), ('ADMINISTER');
INSERT INTO roles_permissions (role_id, permission_id) VALUES (1,1), (1,2), (2,1), (2,2), (2,3), (2,4), (3,1), (3,2), (3,3), (3,4), (3,5), (4,1), (4,2), (4,3), (4,4), (4,5), (4,6);

-- 创建自我关注触发器
CREATE TRIGGER self_follow AFTER INSERT ON user FOR EACH ROW INSERT INTO follow (follower_id, followed_id) VALUES (New.id, NEW.id)



