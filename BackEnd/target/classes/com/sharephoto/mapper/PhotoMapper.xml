<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharephoto.dao.PhotoMapper">
    <resultMap id="BaseResultMap" type="com.sharephoto.entity.Photo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="filename" jdbcType="VARCHAR" property="filename"/>
        <result column="filename_s" jdbcType="VARCHAR" property="filenameS"/>
        <result column="filename_m" jdbcType="VARCHAR" property="filenameM"/>
        <result column="timestamp" jdbcType="TIMESTAMP" property="timestamp"/>
        <result column="flag" jdbcType="SMALLINT" property="flag"/>
        <result column="can_comment" jdbcType="TINYINT" property="canComment"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, description, filename, filename_s, filename_m, timestamp, flag, can_comment, 
    author_id
    </sql>
    <update id="updateReport">
    update photo set flag = flag + 1 where id = #{id}
    </update>
    <update id="updateDescription">
    update photo set description = #{description} where id = #{id}
    </update>
    <update id="updateCanComment">
    update photo set can_comment = 1 - can_comment where id = #{id}
    </update>
    <!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
    <!--    select -->
    <!--    <include refid="Base_Column_List" />-->
    <!--    from photo-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--  </select>-->
      <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from photo
        where id = #{id,jdbcType=INTEGER}
      </delete>
      <insert id="insert" parameterType="com.sharephoto.entity.Photo">
        insert into photo (filename, filename_s, filename_m, author_id)
        values (#{filename,jdbcType=VARCHAR}, #{filenameS,jdbcType=VARCHAR}, #{filenameM,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER})
      </insert>
    <insert id="insertFake" parameterType="com.sharephoto.entity.Photo">
        insert into photo (filename, filename_s, filename_m, author_id, description)
        values (#{filename,jdbcType=VARCHAR}, #{filenameS,jdbcType=VARCHAR}, #{filenameM,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR} )
      </insert>
    <!--  <insert id="insertSelective" parameterType="com.sharephoto.entity.Photo">-->
    <!--    insert into photo-->
    <!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
    <!--      <if test="id != null">-->
    <!--        id,-->
    <!--      </if>-->
    <!--      <if test="description != null">-->
    <!--        description,-->
    <!--      </if>-->
    <!--      <if test="filename != null">-->
    <!--        filename,-->
    <!--      </if>-->
    <!--      <if test="filenameS != null">-->
    <!--        filename_s,-->
    <!--      </if>-->
    <!--      <if test="filenameM != null">-->
    <!--        filename_m,-->
    <!--      </if>-->
    <!--      <if test="timestamp != null">-->
    <!--        timestamp,-->
    <!--      </if>-->
    <!--      <if test="flag != null">-->
    <!--        flag,-->
    <!--      </if>-->
    <!--      <if test="canComment != null">-->
    <!--        can_comment,-->
    <!--      </if>-->
    <!--      <if test="authorId != null">-->
    <!--        author_id,-->
    <!--      </if>-->
    <!--    </trim>-->
    <!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
    <!--      <if test="id != null">-->
    <!--        #{id,jdbcType=INTEGER},-->
    <!--      </if>-->
    <!--      <if test="description != null">-->
    <!--        #{description,jdbcType=VARCHAR},-->
    <!--      </if>-->
    <!--      <if test="filename != null">-->
    <!--        #{filename,jdbcType=VARCHAR},-->
    <!--      </if>-->
    <!--      <if test="filenameS != null">-->
    <!--        #{filenameS,jdbcType=VARCHAR},-->
    <!--      </if>-->
    <!--      <if test="filenameM != null">-->
    <!--        #{filenameM,jdbcType=VARCHAR},-->
    <!--      </if>-->
    <!--      <if test="timestamp != null">-->
    <!--        #{timestamp,jdbcType=TIMESTAMP},-->
    <!--      </if>-->
    <!--      <if test="flag != null">-->
    <!--        #{flag,jdbcType=SMALLINT},-->
    <!--      </if>-->
    <!--      <if test="canComment != null">-->
    <!--        #{canComment,jdbcType=TINYINT},-->
    <!--      </if>-->
    <!--      <if test="authorId != null">-->
    <!--        #{authorId,jdbcType=INTEGER},-->
    <!--      </if>-->
    <!--    </trim>-->
    <!--  </insert>-->
<!--      <update id="updateByPrimaryKeySelective" parameterType="com.sharephoto.entity.Photo">-->
<!--        update photo-->
<!--        <set>-->
<!--          <if test="description != null">-->
<!--            description = #{description,jdbcType=VARCHAR},-->
<!--          </if>-->
<!--          <if test="filename != null">-->
<!--            filename = #{filename,jdbcType=VARCHAR},-->
<!--          </if>-->
<!--          <if test="filenameS != null">-->
<!--            filename_s = #{filenameS,jdbcType=VARCHAR},-->
<!--          </if>-->
<!--          <if test="filenameM != null">-->
<!--            filename_m = #{filenameM,jdbcType=VARCHAR},-->
<!--          </if>-->
<!--          <if test="timestamp != null">-->
<!--            timestamp = #{timestamp,jdbcType=TIMESTAMP},-->
<!--          </if>-->
<!--          <if test="flag != null">-->
<!--            flag = #{flag,jdbcType=SMALLINT},-->
<!--          </if>-->
<!--          <if test="canComment != null">-->
<!--            can_comment = #{canComment,jdbcType=TINYINT},-->
<!--          </if>-->
<!--          <if test="authorId != null">-->
<!--            author_id = #{authorId,jdbcType=INTEGER},-->
<!--          </if>-->
<!--        </set>-->
<!--        where id = #{id,jdbcType=INTEGER}-->
<!--      </update>-->
    <!--  <update id="updateByPrimaryKey" parameterType="com.sharephoto.entity.Photo">-->
    <!--    update photo-->
    <!--    set description = #{description,jdbcType=VARCHAR},-->
    <!--      filename = #{filename,jdbcType=VARCHAR},-->
    <!--      filename_s = #{filenameS,jdbcType=VARCHAR},-->
    <!--      filename_m = #{filenameM,jdbcType=VARCHAR},-->
    <!--      timestamp = #{timestamp,jdbcType=TIMESTAMP},-->
    <!--      flag = #{flag,jdbcType=SMALLINT},-->
    <!--      can_comment = #{canComment,jdbcType=TINYINT},-->
    <!--      author_id = #{authorId,jdbcType=INTEGER}-->
    <!--    where id = #{id,jdbcType=INTEGER}-->
    <!--  </update>-->

    <!--  <resultMap id="selectByTagIdResultMap" type="com.sharephoto.entity.Photo">-->
    <!--    <id column="id" jdbcType="INTEGER" property="id" />-->
    <!--    <result column="filename_s" jdbcType="VARCHAR" property="filenameS" />-->
    <!--  </resultMap>-->
    <!-- 根据标签查询相片 -->
    <select id="selectByTagId" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
    photo.id, photo.filename_s
    from
    (photo left join tagging on photo.id = tagging.photo_id) left join tag on tagging.tag_id = tag.id
    where tag.id = #{tagId,jdbcType=INTEGER}
    order by timestamp desc
    </select>

    <!-- 查询相片总数 -->
    <select id="selectAllCount" resultType="java.lang.Integer">
    select count(*) count from photo
    </select>

    <!-- 查询被举报相片总数 -->
    <select id="selectReportedCount" resultType="java.lang.Integer">
    select count(*) count from photo where flag > 0
    </select>
    <!-- 查询所有图片并按时间排序 -->
    <resultMap id="selectAllByTimeResultMap" type="com.sharephoto.entity.Photo">
        <id column="id" property="id"/>
        <result column="filename_s" property="filenameS"/>
        <result column="description" property="description"/>
        <result column="flag" property="flag"/>
        <result column="timestamp" property="timestamp"/>
        <result column="name" property="authorName"/>
        <result column="username" property="authorUsername"/>
        <association property="tagCount" select="com.sharephoto.dao.PhotoMapper.selectTagCount" column="id"
                     javaType="int"/>
        <association property="tags" select="com.sharephoto.dao.PhotoMapper.selectAllTag" column="id" javaType="List"/>
    </resultMap>
    <select id="selectAllByTime" resultType="com.sharephoto.entity.Photo" resultMap="selectAllByTimeResultMap">
    select photo.id, filename_s, description, user.name, user.username, flag, timestamp
    from photo left join user on author_id = user.id
    order by timestamp desc
    </select>
    <!-- 查询所有图片并按举报数排序 -->
    <select id="selectAllByFlag" resultType="com.sharephoto.entity.Photo" resultMap="selectAllByTimeResultMap">
    select photo.id id, filename_s, description, user.name name, user.username username, flag, timestamp
    from photo left join user on author_id = user.id
    order by flag desc
    </select>
    <!-- 查询图片标签数 -->
    <select id="selectTagCount" resultType="integer" parameterType="integer">
    select count(*)
    from (tag left join tagging on tag.id = tagging.tag_id) left join photo on tagging.photo_id = photo.id
    where photo.id = #{photoId,jdbcType=INTEGER}
    </select>
    <!-- 查询图片所有标签 -->
    <resultMap id="ManageTagResultMap" type="Tag">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>
    <select id="selectAllTag" resultMap="ManageTagResultMap">
    select id, name
    from tag left join tagging on tag.id = tag_id
    where photo_id = #{photoId,jdbcType=INTEGER}
    </select>
    <!-- 获取12张随机相片 -->
    <resultMap id="selectPhotoCardMap" type="com.sharephoto.entity.Photo">
        <id column="id" property="id"/>
        <result column="filename_s" property="filenameS"/>
        <association property="collectorCount" select="com.sharephoto.dao.PhotoMapper.selectCollectorCount" column="id"
                     javaType="integer"/>
        <association property="commentCount" select="com.sharephoto.dao.PhotoMapper.selectCommentCount" column="id"
                     javaType="integer"/>
    </resultMap>
    <select id="selectRandom" resultMap="selectPhotoCardMap">
    select id, filename_s from photo order by rand() limit 12
    </select>
    <!-- 获取图片的收藏者数 -->
    <select id="selectCollectorCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*) from collect where collected_id = #{photoId,jdbcType=INTEGER}
    </select>
    <!-- 获取图片的评论数 -->
    <select id="selectCommentCount" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select count(*) from comment where photo_id = #{photoId,jdbcType=INTEGER}
    </select>
    <!-- 搜索图片 -->
    <select id="selectPhotoByKey" resultMap="selectPhotoCardMap" parameterType="java.lang.String">
    select id, filename_s from photo where description like concat(concat("%",#{q,jdbcType=VARCHAR}),"%")
    </select>
    <!--  当前用户是否收藏此图片  -->
    <select id="selectCollected" resultType="java.lang.Boolean">
    select count(*) from  collect where collected_id = #{id,jdbcType=INTEGER} and collector_id = #{currentUserId,jdbcType=INTEGER}
    </select>
    <!--  获取用户个人中心的数据  -->
    <resultMap id="selectCenterPhotosResultMap" type="com.sharephoto.entity.Photo">
        <id column="id" property="id"/>
        <result column="timestamp" property="timestamp"/>
        <result column="filename_m" property="filenameM"/>
        <result column="description" property="description"/>
        <association property="collectorCount" select="com.sharephoto.dao.PhotoMapper.selectCollectorCount" column="id"
                     javaType="integer"/>
        <association property="commentCount" select="com.sharephoto.dao.PhotoMapper.selectCommentCount" column="id"
                     javaType="integer"/>
        <association property="collected" select="com.sharephoto.dao.PhotoMapper.selectCollected"
                     column="{id=id, currentUserId=currentUserId}" javaType="boolean"/>
        <association property="author" select="com.sharephoto.dao.PhotoMapper.selectAuthorByPhotoId" column="author_id"
                     javaType="com.sharephoto.entity.User"/>
    </resultMap>
    <select id="selectCenterPhotos" resultMap="selectCenterPhotosResultMap" parameterType="java.lang.Integer">
    select id, photo.timestamp timestamp , filename_m, description, author_id,
    case when (#{currentUserId,jdbcType=INTEGER} != "") then #{currentUserId,jdbcType=INTEGER} end as currentUserId
    from photo left join follow on author_id = followed_id
    where follower_id = #{currentUserId,jdbcType=INTEGER}
    </select>
    <!--  根据图片作者ID查询图片作者信息  -->
    <select id="selectAuthorByPhotoId" resultType="com.sharephoto.entity.User" parameterType="java.lang.Integer">
    select id, username, avatar_m, name from user where id = #{id,jdbcType=INTEGER}
    </select>
    <!--  根据图片Id查询图片作者信息  -->
    <select id="selectAuthorInfoByPhotoId" resultType="com.sharephoto.entity.User">
    select user.id, username, receive_collect_notification from photo left join user on author_id = user.id where photo.id = #{id,jdbcType=INTEGER}
    </select>
    <!--  获取图片详细信息  -->
    <resultMap id="selectPhotoDetailResultMap" type="com.sharephoto.entity.Photo">
        <id column="id" property="id"/>
        <result column="filename" property="filename"/>
        <result column="filename_m" property="filenameM"/>
        <result column="timestamp" property="timestamp"/>
        <result column="description" property="description"/>
        <result column="can_comment" property="canComment"/>
        <association property="author" select="com.sharephoto.dao.UserMapper.selectUserById"
                     column="{author_id=author_id, currentUserId=currentUserId}" javaType="com.sharephoto.entity.User"/>
        <association property="tags" select="com.sharephoto.dao.TagMapper.selectTagByPhotoId" column="id"
                     javaType="list"/>
        <association property="collected" select="com.sharephoto.dao.PhotoMapper.selectCollected"
                     column="{id=id, currentUserId=currentUserId}" javaType="boolean"/>
        <association property="collectorCount" select="com.sharephoto.dao.PhotoMapper.selectCollectorCount" column="id"
                     javaType="integer"/>
        <association property="commentCount" select="com.sharephoto.dao.PhotoMapper.selectCommentCount" column="id"
                     javaType="integer"/>
    </resultMap>
    <select id="selectPhotoDetail" resultMap="selectPhotoDetailResultMap" parameterType="integer">
    select author_id, filename, filename_m, id, timestamp, description, can_comment,
    case when (#{currentUserId,jdbcType=INTEGER} != "") then #{currentUserId,jdbcType=INTEGER} end as currentUserId
    from photo where id = #{id,jdbcType=INTEGER}
    </select>
    <!--  获取下一张图片id  -->
    <select id="selectNextPhotoId" resultType="java.lang.Integer">
    select id from photo where id > #{id} and author_id = #{photoAuthorId} order by id limit 1
    </select>
    <!--  获取上一张图片id  -->
    <select id="selectPrePhotoId" resultType="java.lang.Integer">
    select id from photo where id &lt; #{id} and author_id = #{photoAuthorId} order by id desc limit 1
    </select>
    <!--  根据图片Id查询图片作者Id  -->
    <select id="selectAuthorId" resultType="java.lang.Integer">
    select author_id from photo where id = #{id,jdbcType=INTEGER}
    </select>
    <!--  查询图片是否开启评论功能  -->
    <select id="selectCanComment" resultType="java.lang.Boolean">
    select can_comment from photo where id = #{id,jdbcType=INTEGER}
    </select>
    <!--  查询标签下所有图片  -->
    <select id="selectPhotoByTagId" resultMap="selectPhotoCardMap">
    select photo.id id, photo.filename_s filename_s from (photo left join tagging on photo.id = tagging.photo_id) left join tag on tagging.tag_id = tag.id where tag.id = #{tagId} order by timestamp desc
    </select>
    <select id="selectPhotoByOrder" resultMap="selectPhotoCardMap">
    select photo.id id, photo.filename_s filename_s from ((photo left join tagging on photo.id = tagging.photo_id) left join tag on tagging.tag_id = tag.id) left join collect on photo.id = collected_id where tag.id = #{tagId} group by photo.id order by count(collector_id) desc
    </select>
    <!--  查询用户所有图片  -->
    <select id="selectAllByUsername" resultMap="selectPhotoCardMap">
    select photo.id id, photo.filename_s filename_s from photo left join user on author_id = user.id where username = #{username}
    </select>
    <select id="selectAllCollectionByUserId" resultMap="selectPhotoCardMap">
    select id, filename_s from photo left join collect on id = collected_id where collector_id = #{id}
    </select>
    <select id="selectFilenamesById" resultType="com.sharephoto.entity.Photo">
    select  filename, filename_s, filename_m from photo where id = #{id}
    </select>
</mapper>